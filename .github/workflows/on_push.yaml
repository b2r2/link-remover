name: Publish on Docker Hub and Deploy

on:
  push:
    branches:
      - 'dev'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Check code
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PWD }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_LOGIN}}/${{ secrets.DOCKER_NAME }}:latest
          secrets: |
            "TOKEN=${{ secrets.TOKEN_DEV }}"
      -
        name: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_DEV_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          password: ${{ secrets.DEPLOY_DEV_PASSWORD }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            docker stop b2r2/link_remover_tg_bot:latest
            docker rm b2r2/link_remover_tg_bot:latest
            docker system prune -f
            docker run -d b2r2/link_remover_tg_bot:latest

#on:
#  release:
#    types: [published]
#
#jobs:
#  build_and_pub:
#    runs-on: [ubuntu-latest]
#    env:
#      LOGIN: ${{ secrets.DOCKER_LOGIN }}
#      NAME: ${{ secrets.DOCKER_NAME }}
#      TOKEN: ${{ secrets.TOKEN_DEV }}
#    steps:
#      - name: Login to Docker
#        run: echo ${{ secrets.DOCKER_PWD }} | docker login -u $LOGIN --password-stdin
#      - uses: actions/checkout@master
#      - name: Build image
#        run: DOCKER_BUILDKIT=1 docker build --secret id=TOKEN,env=TOKEN -t $LOGIN/$NAME:${GITHUB_REF:11} -f Dockerfile .
#      - name: Push image to docker
#        run: docker push $LOGIN/$NAME:${GITHUB_REF:11}

#  deploy:
#    needs: [docker]
#    runs-on: [ubuntu-latest]
#    steps:
#      - name: Set tag to env
#        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:11})
